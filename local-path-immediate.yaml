apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-path-immediate
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"  # Optional
provisioner: rancher.io/local-path
volumeBindingMode: Immediate
reclaimPolicy: Delete
---
apiVersion: v1
kind: Namespace
metadata:
  name: local-path-immediate-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-path-provisioner-service-account
  namespace: local-path-immediate-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-path-provisioner-role-immediate
rules:
  - apiGroups: [""]
    resources: ["nodes", "persistentvolumeclaims", "persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "create", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-path-provisioner-bind-immediate
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: local-path-provisioner-role-immediate
subjects:
  - kind: ServiceAccount
    name: local-path-provisioner-service-account
    namespace: local-path-immediate-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-path-provisioner
  namespace: local-path-immediate-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: local-path-provisioner
  template:
    metadata:
      labels:
        app: local-path-provisioner
    spec:
      serviceAccountName: local-path-provisioner-service-account
      containers:
        - name: provisioner
          image: rancher/local-path-provisioner:latest
          imagePullPolicy: IfNotPresent
          command:
            - local-path-provisioner
            - --config
            - /etc/config/config.json
          volumeMounts:
            - mountPath: /etc/config/
              name: config-volume
            - mountPath: /opt/local-path-provisioner
              name: local-path
      volumes:
        - name: config-volume
          configMap:
            name: local-path-config
        - name: local-path
          hostPath:
            path: /opt/local-path-provisioner
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-path-config
  namespace: local-path-immediate-ns
data:
  config.json: |
    {
      "nodePathMap":[
        {
          "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
          "paths":["/opt/local-path-provisioner"]
        }
      ]
    }
